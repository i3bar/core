"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var readline=require("readline"),EventEmitter=_interopDefault(require("events"));function type(e){if(1<arguments.length)throw new Error("Expected zero or no more than one argument.");return Object.prototype.toString.call(e).replace("[object ","").replace("]","").toLowerCase()}class After{constructor(e){if("number"!==type(e))throw new TypeError("Expected first argument to be a number.");if(1!==arguments.length)throw new Error("Expected exactly one argument.");this.delay=e}get seconds(){return new Promise(e=>{setTimeout(e,1e3*this.delay)})}}function after(e){if("number"!==type(e))throw new TypeError("First argument must be a number.");if(1!==arguments.length)throw new Error("Expected exactly one argument.");return new After(e)}class I3Block{constructor(e){if(1!==arguments.length)throw new Error("Expected exactly one argument.");if("object"!==type(e))throw new TypeError("Expected first argument to be a string.");if(!Object.prototype.hasOwnProperty.call(e,"full_text"))throw new ReferenceError("Property full_text missing.");const t=type(e.full_text);if("string"!==t&&"function"!==t&&"asyncfunction"!==t)throw new TypeError("Property full_text expected to be a string, a function or an asynchronous function.");this.properties=e}update(e,t){if(2!==arguments.length)throw new Error("Expected exactly two arguments.");if("string"!==type(e))throw new TypeError("The property to update must be a string.");this.properties[e]=t}async normalize(){return(await Promise.all(Object.entries(this.properties).map(async function([e,t]){switch(type(t)){case"asyncfunction":return[e,await t()];case"function":return[e,t()];default:return[e,t]}}))).reduce(function(e,[t,r]){return Object.assign(e,{[t]:r})},{})}}class I3Bar extends EventEmitter{constructor(){super(),this.version=1,this.clickEventsEnabled=!1,this.blocks=[]}enableEvents(){if(0!==arguments.length)throw new Error("Expected exactly zero arguments.");this.clickEventsEnabled=!0}setSecondsBetweenRefreshes(e){if("number"!==type(e))throw new TypeError("First argument must be a number.");if(0>e)throw new Error("First argument cannot be lower than zero.");if(1!==arguments.length)throw new Error("Expected exactly one argument.");this.secondsBetweenRefreshes=e}addBlock(e){if(1!==arguments.length)throw new Error("Expect exactly one argument.");if(!(e instanceof I3Block))throw new TypeError("Expected first argument to be a I3Block.");this.blocks.push(e)}async render(){if(0!==arguments.length)throw new Error("Expected exactly zero arguments.");const e=await Promise.all(this.blocks.map(function(e){return e.normalize()}));process.stdout.write(JSON.stringify(e)),process.stdout.write(",")}listenEvents(){if(0!==arguments.length)throw new Error("Expected exactly zero arguments.");if(!this.clickEventsEnabled)return null;const e=readline.createInterface({input:process.stdin,terminal:!0});return e.on("line",t=>{try{const r=JSON.parse(t.replace(/^,/,""));if(Object.prototype.hasOwnProperty.call(r,"button")&&Object.prototype.hasOwnProperty.call(r,"name")&&Object.prototype.hasOwnProperty.call(r,"modifiers"))switch(r.button){case 1:this.emit("leftClick",r.name,r.modifiers);break;case 2:this.emit("middleClick",r.name,r.modifiers);break;case 3:this.emit("rightClick",r.name,r.modifiers);break;case 4:this.emit("mouseWheelUp",r.name,r.modifiers);break;case 5:this.emit("mouseWheelDown",r.name,r.modifiers)}}catch(e){}finally{e.close(),"test"!==process.env.NODE_ENV&&this.listenEvents()}}),e}async start(){if(0!==arguments.length)throw new Error("Expected no arguments.");if("number"!==type(this.secondsBetweenRefreshes))throw new TypeError("Seconds between refreshes must be set before using this method.");for(this.listenEvents(),process.stdout.write(JSON.stringify({version:this.version,click_events:this.clickEventsEnabled})),process.stdout.write("[[],");this.render(),await after(this.secondsBetweenRefreshes).seconds,"test"!==process.env.NODE_ENV;);}}exports.I3Bar=I3Bar,exports.I3Block=I3Block;
